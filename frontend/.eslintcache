[{"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\index.js":"1","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\App.js":"2","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Login.js":"3","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Home.js":"4","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\AdminLogin.js":"5","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\root.js":"6","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\UI\\Spin.js":"7","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\App.js":"8","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\App.js":"9","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Shared\\useHTTP.js":"10","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Shared\\useAuth.js":"11","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Shared\\useAdmin.js":"12","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Admin\\Admin_Reducer.js":"13","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\layout\\Sidebar.js":"14","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\layout\\Header.js":"15","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Student\\Student_Reducer.js":"16","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\components\\MyBreadcrumb.js":"17","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\pages\\Home.js":"18","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\layout\\Sidebar.js":"19","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\layout\\Header.js":"20","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\pages\\Notifications.js":"21","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\MyBreadcrumb.js":"22","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\Students.js":"23","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Student\\Student_types.js":"24","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Admin\\Admin_types.js":"25","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\components\\StudentCard.js":"26","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\components\\Notification.js":"27","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\PersonneForm.js":"28","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\GF.js":"29","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\GroupeForm.js":"30","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\FilierFrom.js":"31","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\Statistics.js":"32","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\GroupesTable.js":"33","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\Statistics.js":"34","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\Alerts.js":"35","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\AlertForm.js":"36"},{"size":207,"mtime":1612192657678,"results":"37","hashOfConfig":"38"},{"size":1183,"mtime":1612192657654,"results":"39","hashOfConfig":"38"},{"size":3312,"mtime":1612192657703,"results":"40","hashOfConfig":"38"},{"size":273,"mtime":1612192657701,"results":"41","hashOfConfig":"38"},{"size":3297,"mtime":1612192657700,"results":"42","hashOfConfig":"38"},{"size":422,"mtime":1612192657668,"results":"43","hashOfConfig":"38"},{"size":200,"mtime":1612192657675,"results":"44","hashOfConfig":"38"},{"size":1551,"mtime":1612305114583,"results":"45","hashOfConfig":"38"},{"size":1886,"mtime":1612917297655,"results":"46","hashOfConfig":"38"},{"size":1058,"mtime":1612738729233,"results":"47","hashOfConfig":"38"},{"size":1719,"mtime":1612192657658,"results":"48","hashOfConfig":"38"},{"size":1704,"mtime":1612192657657,"results":"49","hashOfConfig":"38"},{"size":443,"mtime":1612192657662,"results":"50","hashOfConfig":"38"},{"size":2079,"mtime":1612192657715,"results":"51","hashOfConfig":"38"},{"size":1036,"mtime":1612305078594,"results":"52","hashOfConfig":"38"},{"size":459,"mtime":1612192657666,"results":"53","hashOfConfig":"38"},{"size":643,"mtime":1612192657707,"results":"54","hashOfConfig":"38"},{"size":448,"mtime":1612192657718,"results":"55","hashOfConfig":"38"},{"size":3088,"mtime":1612920238953,"results":"56","hashOfConfig":"38"},{"size":1022,"mtime":1612304963352,"results":"57","hashOfConfig":"38"},{"size":2534,"mtime":1612192657722,"results":"58","hashOfConfig":"38"},{"size":643,"mtime":1612192657689,"results":"59","hashOfConfig":"38"},{"size":6146,"mtime":1612919486842,"results":"60","hashOfConfig":"38"},{"size":100,"mtime":1612192657667,"results":"61","hashOfConfig":"38"},{"size":92,"mtime":1612192657664,"results":"62","hashOfConfig":"38"},{"size":1556,"mtime":1612192657710,"results":"63","hashOfConfig":"38"},{"size":1630,"mtime":1612192657708,"results":"64","hashOfConfig":"38"},{"size":5450,"mtime":1612798627057,"results":"65","hashOfConfig":"38"},{"size":861,"mtime":1612806681103,"results":"66","hashOfConfig":"38"},{"size":1935,"mtime":1612738799585,"results":"67","hashOfConfig":"38"},{"size":1091,"mtime":1612739391247,"results":"68","hashOfConfig":"38"},{"size":1178,"mtime":1612798414955,"results":"69","hashOfConfig":"38"},{"size":3106,"mtime":1612915843169,"results":"70","hashOfConfig":"38"},{"size":334,"mtime":1612916240181,"results":"71","hashOfConfig":"38"},{"size":539,"mtime":1612964437226,"results":"72","hashOfConfig":"38"},{"size":2831,"mtime":1612967292060,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"8byoz8",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"76"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\index.js",[],["161","162"],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\App.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Login.js",["163"],"import React, { useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { At, Lock, Eye, EyeSlash } from \"react-bootstrap-icons\";\r\nimport { Checkbox } from \"antd\";\r\nimport { useFormik } from \"formik\";\r\nimport { Alert } from \"antd\";\r\nimport useHTTP from \"../Shared/useHTTP\";\r\nimport MySpin from \"../UI/Spin\";\r\nimport useAuth from \"../Shared/useAuth\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Login() {\r\n  const { loading, error, fetchData } = useHTTP();\r\n  const { login } = useAuth();\r\n  const token = useSelector((state) => state.student.token);\r\n  const history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      login: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: async (e, { resetForm }) => {\r\n      const dataSent = JSON.stringify({ password: e.password, email: e.login });\r\n\r\n      const data = await fetchData(\"student/login\", \"POST\", dataSent, {\r\n        \"Content-Type\": \"application/json\",\r\n      });\r\n      login(data.student, data.token, null);\r\n\r\n      resetForm();\r\n    },\r\n    validate: (values) => {\r\n      const errors = {};\r\n      if (!values.login) {\r\n        errors.login = \"login required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.login)\r\n      ) {\r\n        errors.login = \"please check your email\";\r\n      }\r\n\r\n      if (!values.password) {\r\n        errors.login = \"password required\";\r\n      } else if (values.password.length < 6) {\r\n        errors.login = \"password is too short\";\r\n      }\r\n      return errors;\r\n    },\r\n  });\r\n  const onChange = (e) => {\r\n    console.log(`checked = ${e.target.checked}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      history.push(\"/Student\");\r\n    }\r\n  }, [token]);\r\n  return loading ? (\r\n    <MySpin />\r\n  ) : (\r\n    <div className=\"from__center\">\r\n      <form className=\"Form \" onSubmit={formik.handleSubmit}>\r\n        {error ? (\r\n          <Alert message={error} type=\"error\" className=\"w-300\" showIcon />\r\n        ) : null}\r\n        {formik.touched.login && formik.errors.login ? (\r\n          <Alert\r\n            message={formik.errors.login}\r\n            type=\"error\"\r\n            className=\"w-300\"\r\n            showIcon\r\n          />\r\n        ) : null}\r\n        {formik.touched.password && formik.errors.password ? (\r\n          <Alert\r\n            message={formik.errors.password}\r\n            type=\"error\"\r\n            className=\"w-300\"\r\n            showIcon\r\n          />\r\n        ) : null}\r\n        <Input\r\n          className=\"input__text\"\r\n          name=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.login}\r\n          placeholder=\"Login\"\r\n          prefix={<At />}\r\n        />\r\n        <Input.Password\r\n          prefix={<Lock />}\r\n          name=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={formik.handleChange}\r\n          className=\"input__text\"\r\n          value={formik.values.password}\r\n          iconRender={(visible) => (visible ? <Eye /> : <EyeSlash />)}\r\n        />\r\n        <Checkbox className=\"checkBox\" onChange={onChange}>\r\n          Remmember me\r\n        </Checkbox>\r\n        <button type=\"submit\" className=\"btn__form\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Home.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\AdminLogin.js",["164","165"],"import React, { useEffect } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { At, Lock, Eye, EyeSlash, Person } from \"react-bootstrap-icons\";\r\nimport { Checkbox } from \"antd\";\r\nimport { useFormik } from \"formik\";\r\nimport { Alert } from \"antd\";\r\nimport useHTTP from \"../Shared/useHTTP\";\r\nimport MySpin from \"../UI/Spin\";\r\nimport useAdmin from \"../Shared/useAdmin\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction AdminLogin() {\r\n  const { loading, error, fetchData } = useHTTP();\r\n  const { login } = useAdmin();\r\n  const token = useSelector((state) => state.admin.token);\r\n  const history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      login: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: async (e, { resetForm }) => {\r\n      const dataSent = JSON.stringify({ password: e.password, login: e.login });\r\n\r\n      const data = await fetchData(\"admin/login\", \"POST\", dataSent, {\r\n        \"Content-Type\": \"application/json\",\r\n      });\r\n      console.log(data);\r\n      login(data.admin, data.token, null);\r\n\r\n      resetForm();\r\n    },\r\n    validate: (values) => {\r\n      const errors = {};\r\n      if (!values.login) {\r\n        errors.login = \"login required\";\r\n      } else if (values.login.length < 6) {\r\n        errors.login = \"please check your email\";\r\n      }\r\n\r\n      if (!values.password) {\r\n        errors.login = \"password required\";\r\n      } else if (values.password.length < 6) {\r\n        errors.login = \"password is too short\";\r\n      }\r\n      return errors;\r\n    },\r\n  });\r\n  const onChange = (e) => {\r\n    console.log(`checked = ${e.target.checked}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      history.push(\"/Admin\");\r\n    }\r\n  }, [token]);\r\n  return loading ? (\r\n    <MySpin />\r\n  ) : (\r\n    <div className=\"from__center\">\r\n      <form className=\"Form \" onSubmit={formik.handleSubmit}>\r\n        {error ? (\r\n          <Alert message={error} type=\"error\" className=\"w-300\" showIcon />\r\n        ) : null}\r\n        {formik.touched.login && formik.errors.login ? (\r\n          <Alert\r\n            message={formik.errors.login}\r\n            type=\"error\"\r\n            className=\"w-300\"\r\n            showIcon\r\n          />\r\n        ) : null}\r\n        {formik.touched.password && formik.errors.password ? (\r\n          <Alert\r\n            message={formik.errors.password}\r\n            type=\"error\"\r\n            className=\"w-300\"\r\n            showIcon\r\n          />\r\n        ) : null}\r\n        <Input\r\n          className=\"input__text\"\r\n          name=\"login\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.login}\r\n          placeholder=\"Login\"\r\n          prefix={<Person />}\r\n        />\r\n        <Input.Password\r\n          prefix={<Lock />}\r\n          name=\"password\"\r\n          placeholder=\"password\"\r\n          onChange={formik.handleChange}\r\n          className=\"input__text\"\r\n          value={formik.values.password}\r\n          iconRender={(visible) => (visible ? <Eye /> : <EyeSlash />)}\r\n        />\r\n        <Checkbox className=\"checkBox\" onChange={onChange}>\r\n          Remmember me\r\n        </Checkbox>\r\n        <button type=\"submit\" className=\"btn__form\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\root.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\UI\\Spin.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\App.js",["166","167"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"./layout/Sidebar\";\r\nimport Header from \"./layout/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useAuth from \"../../Shared/useAuth\";\r\nimport MyBreadcrumb from \"./components/MyBreadcrumb\";\r\nconst Home = React.lazy(() => import(\"./pages/Home\"));\r\nconst Notifications = React.lazy(() => import(\"./pages/Notifications\"));\r\nlet timer;\r\nfunction App() {\r\n  const token = useSelector((state) => state.student.token);\r\n  const auth = useAuth();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!token) {\r\n      timer = setTimeout(() => {\r\n        console.log(\"Going to login\");\r\n        history.push(\"/Login\");\r\n      }, 100);\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }\r\n  }, [token]);\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n  const sidebar = JSON.parse(localStorage.getItem(\"Sidebare\"))\r\n  useEffect(()=>{\r\nif(sidebar) {setToggle(sidebar[\"value\"])}\r\n  },[])\r\n  return (\r\n    <div className=\"Student__area\">\r\n      <Header toggle={toggle} setToggle={setToggle} />\r\n      <Sidebar logout={auth.logout} toggle={toggle} />\r\n      <div className={toggle ? \" full__content content\" : \"content\"}>\r\n        <MyBreadcrumb />\r\n        <Switch>\r\n          <Route path=\"/Student\" component={Home} exact />\r\n          <Route path=\"/Student/Notifications/:id?\" component={Notifications} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\App.js",["168","169"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport \"../../styles/DashBoard/index.scss\";\r\n\r\nimport Sidebar from \"./layout/Sidebar\";\r\nimport Header from \"./layout/Header\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useAdmin from \"../../Shared/useAdmin\";\r\nimport MyBreadcrumb from \"./components/MyBreadcrumb\";\r\nconst GF = React.lazy(() => import(\"./pages/GF\"));\r\nconst Statistics = React.lazy(() => import(\"./pages/Statistics\"));\r\nconst Students = React.lazy(() => import(\"./pages/Students\"));\r\nconst Alerts = React.lazy(() => import(\"./pages/Alerts\"));\r\nlet timer;\r\nfunction App() {\r\n  const token = useSelector((state) => state.admin.token);\r\n  document.title = \"Admin\";\r\n  const admin = useAdmin();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (!token) {\r\n      timer = setTimeout(() => {\r\n        console.log(\"Going to login\");\r\n        history.push(\"/AdminLogin\");\r\n      }, 100);\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }\r\n  }, [token]);\r\n  const [toggle, setToggle] = useState();\r\n  const sidebar = JSON.parse(localStorage.getItem(\"Sidebare\"));\r\n  useEffect(() => {\r\n    if (sidebar) {\r\n      setToggle(sidebar[\"value\"]);\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"Student__area\">\r\n      <Header toggle={toggle} setToggle={setToggle} />\r\n      <Sidebar logout={admin.logout} toggle={toggle} />\r\n      <div className={toggle ? \" full__content content\" : \"content\"}>\r\n        <MyBreadcrumb />\r\n        <Switch>\r\n          <Route path=\"/Admin\" component={Statistics} exact />\r\n          <Route path=\"/Admin/Students\" component={Students} exact />\r\n          <Route path=\"/Admin/Gf\" component={GF} exact />\r\n          <Route path=\"/Admin/Alerts\" component={Alerts} exact />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Shared\\useHTTP.js",["170"],"import { message } from \"antd\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nfunction useHTTP() {\r\n  const [loading, setLoading] = useState();\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  useEffect(() => {\r\n    if (error) message.error(error);\r\n  }, [error]);\r\n  useEffect(() => {\r\n    if (success) message.success(success);\r\n  }, [success]);\r\n  const fetchData = useCallback(\r\n    async (url, method = \"GET\", body, headers = {}) => {\r\n      setLoading(true);\r\n      setError(null);\r\n      setSuccess(null);\r\n      const res = await fetch(process.env.REACT_APP_BACKEND_URL + \"\" + url, {\r\n        body,\r\n        method,\r\n        headers,\r\n      });\r\n\r\n      const data = await res.json();\r\n      setLoading(false);\r\n      let code = 200;\r\n      if (!res.ok) {\r\n        code = 400;\r\n        setError(data.message);\r\n      } else {\r\n        setSuccess(data.message);\r\n      }\r\n\r\n      return { ...data, code };\r\n    }\r\n  );\r\n  return { loading, error, fetchData };\r\n}\r\nexport default useHTTP;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Shared\\useAuth.js",["171","172"],"import { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  STUDENT__LOGIN,\r\n  STUDENT__LOGOUT,\r\n} from \"../Store/Student/Student_types\";\r\nlet timer;\r\nfunction useAuth() {\r\n  const dispatch = useDispatch();\r\n  const [mytoken, setMytoken] = useState();\r\n  const [timeExpire, setTimeExpire] = useState();\r\n  const history = useHistory();\r\n\r\n  const login = useCallback(\r\n    (student, token, dd) => {\r\n      const expireDate = dd || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n      const storedUser = JSON.stringify({\r\n        token,\r\n        student,\r\n        expireDate,\r\n      });\r\n      setMytoken(token);\r\n      setTimeExpire(expireDate);\r\n      localStorage.setItem(\"auth\", storedUser);\r\n\r\n      dispatch({ type: STUDENT__LOGIN, student, token });\r\n    },\r\n    [dispatch]\r\n  );\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem(\"auth\");\r\n    setMytoken(\"\");\r\n    dispatch({ type: STUDENT__LOGOUT });\r\n    history.push(\"/Login\");\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (mytoken) {\r\n      const timeLeft = new Date(timeExpire).getTime() - new Date().getTime();\r\n      console.log(\"timeLeft : \" + timeLeft);\r\n      timer = setTimeout(logout, timeLeft);\r\n    } else {\r\n      clearInterval(timer);\r\n    }\r\n  }, [timeExpire, logout]);\r\n\r\n  useEffect(() => {\r\n    const storedUser = JSON.parse(localStorage.getItem(\"auth\"));\r\n    if (storedUser && storedUser.expireDate) {\r\n      login(\r\n        storedUser.student,\r\n        storedUser.token,\r\n        new Date(storedUser.expireDate)\r\n      );\r\n    }\r\n  }, [login]);\r\n  return { login, logout, mytoken };\r\n}\r\n\r\nexport default useAuth;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Shared\\useAdmin.js",["173","174"],"import { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ADMIN__LOGIN, ADMIN__LOGOUT } from \"../Store/Admin/Admin_types\";\r\n\r\nlet timer;\r\nfunction useAdmin() {\r\n  const dispatch = useDispatch();\r\n  const [mytoken, setMytoken] = useState();\r\n  const [timeExpire, setTimeExpire] = useState();\r\n  const history = useHistory();\r\n\r\n  const login = useCallback(\r\n    (admin, token, dd) => {\r\n      const expireDate = dd || new Date(new Date().getTime() + 1000 * 180 * 60);\r\n      const storedUser = JSON.stringify({\r\n        token,\r\n        admin,\r\n        expireDate,\r\n      });\r\n      setMytoken(token);\r\n      setTimeExpire(expireDate);\r\n      localStorage.setItem(\"admin\", storedUser);\r\n\r\n      dispatch({ type: ADMIN__LOGIN, admin, token });\r\n    },\r\n    [dispatch]\r\n  );\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem(\"admin\");\r\n    setMytoken(\"\");\r\n    dispatch({ type: ADMIN__LOGOUT });\r\n    history.push(\"/AdminLogin\");\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (mytoken) {\r\n      const timeLeft = new Date(timeExpire).getTime() - new Date().getTime();\r\n      console.log(\"timeLeft : \" + timeLeft);\r\n      timer = setTimeout(logout, timeLeft);\r\n    } else {\r\n      clearInterval(timer);\r\n    }\r\n  }, [timeExpire, logout]);\r\n\r\n  useEffect(() => {\r\n    const storedUser = JSON.parse(localStorage.getItem(\"admin\"));\r\n    if (storedUser && storedUser.expireDate) {\r\n      login(\r\n        storedUser.admin,\r\n        storedUser.token,\r\n        new Date(storedUser.expireDate)\r\n      );\r\n    }\r\n  }, [login]);\r\n  return { login, logout, mytoken };\r\n}\r\n\r\nexport default useAdmin;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Admin\\Admin_Reducer.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\layout\\Sidebar.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\layout\\Header.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Student\\Student_Reducer.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\components\\MyBreadcrumb.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\pages\\Home.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\layout\\Sidebar.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\layout\\Header.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\pages\\Notifications.js",["175","176","177","178","179","180","181"],"import React, { useEffect, useState } from \"react\";\r\nimport useHTTP from \"../../../Shared/useHTTP\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Affix } from \"antd\";\r\nfunction Notifications({ match }) {\r\n  const { error, loading, fetchData } = useHTTP();\r\n  const [notifations, setNotifations] = useState();\r\n\r\n  const [top, setTop] = useState(95);\r\n  const history = useHistory();\r\n  const id = match.params.id;\r\n  const [notifation, setNotifation] = useState(id ? id : null);\r\n  useEffect(async () => {\r\n    const data = await fetchData(\"notification\");\r\n    setNotifations(data.notifications);\r\n  }, []);\r\n  useEffect(() => {\r\n    if (id && notifations) {\r\n      setNotifation(notifations.find((xs) => xs._id == id));\r\n      console.log(\"notifation :\" + notifation);\r\n    }\r\n  }, [id, notifations]);\r\n  const goToPath = (id) => {\r\n    history.push(\"/Student/Notifications/\" + id);\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-7 col-sm-12\">\r\n        {notifations &&\r\n          notifations.map((xs) => (\r\n            <div\r\n              className=\"notification component  px-4 myShadow bg-white mb-3\"\r\n              key={xs._id}\r\n              onClick={goToPath.bind(this, xs._id)}\r\n            >\r\n              <h5 className=\"notification__tittle\">{xs.title}</h5>\r\n              <div className=\"notification__message\">\r\n                {xs.message.substring(0, 140) + \"...\"}\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <span className=\"notification__date\">\r\n                  {moment(xs.createdAt).calendar()}\r\n                </span>\r\n                <span className=\"notification__link\">Read</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"col-lg-5  col-sm-12\">\r\n        {notifation && (\r\n          <Affix offsetTop={top}>\r\n            <div className=\"notification component px-4 myShadow bg-white s\">\r\n              <h5 className=\"notification__tittle\">{notifation.title}</h5>\r\n              <div className=\"notification__message\">{notifation.message}</div>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <span className=\"notification__date\">\r\n                  {moment(notifation.createdAt).calendar()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </Affix>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\MyBreadcrumb.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\Students.js",["182"],"import React, { useEffect, useState } from \"react\";\r\nimport useHTTP from \"../../../Shared/useHTTP\";\r\nimport { Table, Input, Button, Space, Select } from \"antd\";\r\nimport PersonneForm from \"../components/PersonneForm\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { ArrowRepeat } from \"react-bootstrap-icons\";\r\nlet studentsNotFiltered;\r\nfunction Students() {\r\n  const { fetchData, loading } = useHTTP();\r\n  const [students, setStudents] = useState();\r\n  const [groupes, setGroupes] = useState();\r\n  let searchInput;\r\n  const [open, setOpen] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n  const [dataToModel, setDataToModel] = useState();\r\n  const { Option } = Select;\r\n  const OpenModal = () => {\r\n    setDataToModel({});\r\n    setOpen(!open);\r\n  };\r\n  const res = async () => {\r\n    const data = await fetchData(\"student\");\r\n    setStudents(data.students);\r\n    studentsNotFiltered = data.students;\r\n  };\r\n  const getGroupes = async () => {\r\n    const data = await fetchData(\"group\");\r\n    setGroupes(data.groupes);\r\n  };\r\n  const Filter = (search) => {\r\n    if (search) {\r\n      setStudents(studentsNotFiltered.filter((xs) => xs.groupe._id === search));\r\n    } else {\r\n      setStudents(studentsNotFiltered);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    res();\r\n    getGroupes();\r\n  }, []);\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n            className=\"bg__P color__white\"\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n\r\n    setSearchText(\"\");\r\n  };\r\n  const StudentTable = [\r\n    {\r\n      title: \"First Name\",\r\n      dataIndex: \"firstName\",\r\n      key: \"firstName\",\r\n    },\r\n    {\r\n      title: \"Last Name\",\r\n      dataIndex: \"lastName\",\r\n      key: \"lastName\",\r\n      ...getColumnSearchProps(\"lastName\"),\r\n    },\r\n    {\r\n      title: \"Groupe\",\r\n      dataIndex: \"groupe\",\r\n      key: \"groupe\",\r\n      render: (text) => <div> {text.name}</div>,\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      key: \"phone\",\r\n      dataIndex: \"phone\",\r\n      ...getColumnSearchProps(\"phone\"),\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      key: \"email\",\r\n      dataIndex: \"email\",\r\n      ...getColumnSearchProps(\"email\"),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"Action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <button\r\n            className=\"btn__link\"\r\n            onClick={() => {\r\n              setDataToModel(text);\r\n              setOpen(true);\r\n            }}\r\n          >\r\n            Edit\r\n          </button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"table__container component\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <button className=\"btn__icon mr-2\" onClick={res}>\r\n              <ArrowRepeat />\r\n            </button>\r\n            <button className=\"btn__primary\" onClick={OpenModal}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"w-150\">\r\n            <Select\r\n              className=\"input__form \"\r\n              placeholder=\"Groupe\"\r\n              name=\"filier\"\r\n              onChange={Filter}\r\n              allowClear\r\n            >\r\n              {groupes &&\r\n                groupes.map((groupe) => (\r\n                  <Option value={groupe._id} key={groupe._id}>\r\n                    {groupe.name}\r\n                  </Option>\r\n                ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"myTable\">\r\n          <Table\r\n            columns={StudentTable}\r\n            pagination={{ showSizeChanger: true }}\r\n            dataSource={students}\r\n            bordered\r\n            loading={loading}\r\n            rowKey={(d) => d._id}\r\n          />\r\n        </div>\r\n      </div>\r\n      {open && (\r\n        <PersonneForm\r\n          open={open}\r\n          OpenModal={OpenModal}\r\n          DataToModel={dataToModel}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Students);\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Student\\Student_types.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\Store\\Admin\\Admin_types.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\components\\StudentCard.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Student\\components\\Notification.js",["183","184","185","186"],"import React, { useEffect, useState } from \"react\";\r\nimport useHTTP from \"../../../Shared/useHTTP\";\r\nimport { BellFill } from \"react-bootstrap-icons\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction Notification() {\r\n  const { error, loading, fetchData } = useHTTP();\r\n  const [notifations, setNotifations] = useState();\r\n  const history = useHistory();\r\n  useEffect(async () => {\r\n    const data = await fetchData(\"notification\");\r\n    setNotifations(data.notifications);\r\n  }, []);\r\n  const goToPath = (id) => {\r\n    history.push(\"/Student/Notifications/\" + id);\r\n  };\r\n  return (\r\n    <div className=\"myShadow py-4 bg-white component\">\r\n      <div className=\"mx-4 component__icon  \">\r\n        <BellFill size={28} />\r\n      </div>\r\n\r\n      <div>\r\n        {notifations &&\r\n          notifations.slice(0, 2).map((xs) => (\r\n            <div\r\n              className=\"notification  px-4\"\r\n              key={xs._id}\r\n              onClick={goToPath.bind(this, xs._id)}\r\n            >\r\n              <h5 className=\"notification__tittle\">{xs.title}</h5>\r\n              <div className=\"notification__message\">\r\n                {xs.message.substring(0, 110) + \"...\"}\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <span className=\"notification__date\">\r\n                  {moment(xs.createdAt).calendar()}\r\n                </span>\r\n                <span className=\"notification__link\">Read</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\PersonneForm.js",["187","188","189","190"],"import { DatePicker, Input, Modal, Select, Form, Alert } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useHTTP from \"../../../Shared/useHTTP\";\r\n\r\nfunction PersonneForm({ OpenModal, open, DataToModel }) {\r\n  const { Option } = Select;\r\n  const [groupes, setGroupes] = useState();\r\n  const { fetchData, error } = useHTTP();\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    getGroupes();\r\n  }, []);\r\n  const HandelDelete = async () => {\r\n    const res = await fetchData(\"student/\" + DataToModel._id, \"DELETE\");\r\n    OpenModal();\r\n  };\r\n  const getGroupes = async () => {\r\n    const res = await fetchData(\"group\");\r\n    setGroupes(res.groupes);\r\n  };\r\n  const HandelStudent = async (student, handling) => {\r\n    const method = handling === \"Add\" ? \"POST\" : \"PATCH\";\r\n    const res = await fetchData(\"student\", method, JSON.stringify(student), {\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n  };\r\n  const HandelSubmit = (handling = \"Add\") => {\r\n    form\r\n      .validateFields()\r\n      .then((values) => {\r\n        form.resetFields();\r\n        const data = {\r\n          firstName: values.firstName,\r\n          groupe: DataToModel.groupe ? DataToModel.groupe : values.groupe,\r\n          email: values.email,\r\n          lastName: values.lastName,\r\n          phone: values.phone,\r\n          birthday: moment(values.birthday).format(\"YYYY-MM-DD\"),\r\n          id: DataToModel._id && DataToModel._id,\r\n        };\r\n        console.log(data);\r\n        HandelStudent(data, handling);\r\n      })\r\n      .catch((info) => {\r\n        console.log(\"Validate Failed:\", info);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Add Students\"\r\n      closable={false}\r\n      visible={open}\r\n      onCancel={OpenModal}\r\n      onOk={HandelSubmit}\r\n      centered\r\n      width={600}\r\n      footer={[\r\n        <button key=\"1\" onClick={OpenModal} className=\"btn__secondary\">\r\n          Cancel\r\n        </button>,\r\n        ,\r\n        DataToModel._id\r\n          ? [\r\n              <button onClick={HandelDelete} key=\"2\" className=\"btn__danger\">\r\n                Delete\r\n              </button>,\r\n              <button\r\n                onClick={HandelSubmit.bind(this, \"Update\")}\r\n                key=\"3\"\r\n                className=\"btn__primary\"\r\n              >\r\n                Update\r\n              </button>,\r\n            ]\r\n          : [\r\n              <button\r\n                onClick={HandelSubmit.bind(this, \"Add\")}\r\n                key=\"2\"\r\n                className=\"btn__primary\"\r\n              >\r\n                Add\r\n              </button>,\r\n            ],\r\n      ]}\r\n    >\r\n      {error ? (\r\n        <Alert message={error} type=\"error\" className=\"w-full mb-3\" showIcon />\r\n      ) : null}\r\n      <Form className=\"personneForm\" form={form} layout=\"vertical\">\r\n        <div className=\"row \">\r\n          <div className=\"col-6\">\r\n            <Form.Item\r\n              label=\"First Name\"\r\n              name=\"firstName\"\r\n              rules={[{ required: true }]}\r\n              initialValue={DataToModel.firstName}\r\n            >\r\n              <Input className=\"input__form\" placeholder=\"First Name\" />\r\n            </Form.Item>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Form.Item\r\n              label=\"Last Name\"\r\n              name=\"lastName\"\r\n              rules={[{ required: true }]}\r\n              initialValue={DataToModel.lastName}\r\n            >\r\n              <Input className=\"input__form\" placeholder=\"Last Name\" />\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n        <div className=\"row \">\r\n          <div className=\"col-6\">\r\n            <Form.Item\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              rules={[{ required: true }]}\r\n              initialValue={DataToModel.phone}\r\n            >\r\n              <Input className=\"input__form\" placeholder=\"Phone\" />\r\n            </Form.Item>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Form.Item\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              rules={[{ required: true, type: \"email\" }]}\r\n              initialValue={DataToModel.email}\r\n            >\r\n              <Input className=\"input__form\" placeholder=\"Email\" />\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-8\">\r\n            <Form.Item\r\n              name=\"birthday\"\r\n              label=\"Birthday\"\r\n              rules={[{ required: true }]}\r\n              initialValue={\r\n                DataToModel.birthday && moment(DataToModel.birthday)\r\n              }\r\n            >\r\n              <DatePicker className=\"input__form\" />\r\n            </Form.Item>\r\n          </div>\r\n          <div className=\"col-4 \">\r\n            <Form.Item\r\n              label=\"Groupe\"\r\n              name=\"groupe\"\r\n              rules={[{ required: true }]}\r\n              initialValue={DataToModel.groupe && DataToModel.groupe.name}\r\n            >\r\n              <Select className=\"input__form\" placeholder=\"Groupe\">\r\n                {groupes &&\r\n                  groupes.map((groupe) => (\r\n                    <Option value={groupe._id} key={groupe._id}>\r\n                      {groupe.name}\r\n                    </Option>\r\n                  ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default PersonneForm;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\GF.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\GroupeForm.js",["191","192"],"import { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useHTTP from \"../../../Shared/useHTTP\";\r\nimport { Input, message, Select } from \"antd\";\r\nimport { PlusCircleFill } from \"react-bootstrap-icons\";\r\nfunction GroupeForm() {\r\n  const [filiers, setFiliers] = useState();\r\n  const formik = useFormik({\r\n    initialValues: { name: \"\", filier: \"\" },\r\n    onSubmit: async (values, { resetForm }) => {\r\n      const { name, filier } = values;\r\n      await fetchData(\"group\", \"POST\", JSON.stringify({ name, filier }), {\r\n        \"Content-Type\": \"application/json\",\r\n      });\r\n\r\n      resetForm();\r\n    },\r\n  });\r\n  const { Option } = Select;\r\n  const { fetchData } = useHTTP();\r\n  const getFiliers = async () => {\r\n    const data = await fetchData(\"filier\");\r\n    setFiliers(data.filiers);\r\n  };\r\n  useEffect(() => {\r\n    getFiliers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"component p-3\">\r\n      <div className=\"mx-2 component__icon  \">\r\n        <PlusCircleFill size={28} />\r\n      </div>\r\n      <form onSubmit={formik.handleSubmit} className=\"personneForm\">\r\n        <div className=\"d-flex mb-2\">\r\n          <Input\r\n            className=\"input__form mr-1\"\r\n            name=\"name\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n            placeholder=\"Name\"\r\n          />\r\n          <Select\r\n            className=\"input__form \"\r\n            placeholder=\"filier name\"\r\n            name=\"filier\"\r\n            onChange={(value) => formik.setFieldValue(\"filier\", value)}\r\n          >\r\n            {filiers &&\r\n              filiers.map((filier) => (\r\n                <Option value={filier._id} key={filier._id}>\r\n                  {filier.name}\r\n                </Option>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n        <button className=\"btn__form w-100\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupeForm;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\FilierFrom.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\Statistics.js",["193"],"import React, { useEffect, useState } from \"react\";\r\nimport useHTTP from \"../../../Shared/useHTTP\";\r\n\r\nfunction Statistics() {\r\n  const { fetchData } = useHTTP();\r\n  const [statistics, setStatistics] = useState({\r\n    students: null,\r\n    filiers: null,\r\n    groupes: null,\r\n  });\r\n  const getStatis = async () => {\r\n    const data = await fetchData(\"statict\");\r\n    setStatistics(data);\r\n  };\r\n  useEffect(() => {\r\n    getStatis();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\" statistics\">\r\n        <div className=\"statistic__card \">\r\n          <h5 className=\"statistic__card__title\">Students</h5>\r\n          <h3 className=\"text-center\">{statistics && statistics.students}</h3>\r\n        </div>\r\n        <div className=\"statistic__card \">\r\n          <h5 className=\"statistic__card__title\">Groupes</h5>\r\n          <h3 className=\"text-center\">{statistics && statistics.groupes}</h3>\r\n        </div>\r\n        <div className=\"statistic__card \">\r\n          <h5 className=\"statistic__card__title\">Filiers</h5>\r\n          <h3 className=\"text-center\">{statistics && statistics.filiers}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\GroupesTable.js",["194","195"],"import React, { useEffect, useState } from \"react\";\r\nimport useHTTP from \"../../../Shared/useHTTP\";\r\nimport { Table, Popconfirm, Select } from \"antd\";\r\nimport { ArrowRepeat } from \"react-bootstrap-icons\";\r\nlet groupesNotFiltered;\r\nfunction GroupesTable() {\r\n  const { fetchData, loading } = useHTTP();\r\n  const [groupes, setGroupes] = useState();\r\n  const [filiers, setFiliers] = useState();\r\n  const { Option } = Select;\r\n  const res = async () => {\r\n    const data = await fetchData(\"group\");\r\n    setGroupes(data.groupes);\r\n    groupesNotFiltered = data.groupes;\r\n  };\r\n  const Delete = async (id) => {\r\n    await fetchData(\"group/\" + id, \"DELETE\");\r\n  };\r\n  const getFiliers = async () => {\r\n    const data = await fetchData(\"filier\");\r\n    setFiliers(data.filiers);\r\n  };\r\n  useEffect(() => {\r\n    res();\r\n    getFiliers();\r\n  }, []);\r\n\r\n  const Filter = (search) => {\r\n    if (search) {\r\n      setGroupes(groupesNotFiltered.filter((xs) => xs.filier._id === search));\r\n    } else {\r\n      setGroupes(groupesNotFiltered);\r\n    }\r\n  };\r\n  const groupesTable = [\r\n    {\r\n      title: \"Groupe\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"Filier\",\r\n      dataIndex: \"filier\",\r\n      key: \"filier\",\r\n      render: (text) => <div> {text.name}</div>,\r\n    },\r\n    {\r\n      title: \"Year\",\r\n      dataIndex: \"createdAt\",\r\n      render: (text) => (\r\n        <div>\r\n          {new Date(text).getFullYear() +\r\n            \"/\" +\r\n            (new Date(text).getFullYear() + 1)}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"Action\",\r\n      dataIndex: \"_id\",\r\n      render: (text, record) => (\r\n        <Popconfirm\r\n          title=\"Are you sure to delete this?\"\r\n          onConfirm={Delete.bind(this, text)}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n          onCancel={() => {}}\r\n        >\r\n          <a href=\"#\" className=\"btn__link\">\r\n            Delete\r\n          </a>\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <div className=\"d-flex personneForm\">\r\n        <button className=\"btn__icon mb-3 mr-3\" onClick={res}>\r\n          <ArrowRepeat />\r\n        </button>\r\n        <div className=\"w-150\">\r\n          <Select\r\n            className=\"input__form \"\r\n            placeholder=\"filier name\"\r\n            name=\"filier\"\r\n            onChange={Filter}\r\n            allowClear\r\n          >\r\n            {filiers &&\r\n              filiers.map((filier) => (\r\n                <Option value={filier._id} key={filier._id}>\r\n                  {filier.name}\r\n                </Option>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"myTable\">\r\n        <Table\r\n          columns={groupesTable}\r\n          pagination={{\r\n            showSizeChanger: true,\r\n            pageSizeOptions: [5, 10, 20],\r\n            defaultPageSize: 5,\r\n          }}\r\n          dataSource={groupes}\r\n          loading={loading}\r\n          rowKey={(d) => d._id}\r\n          bordered\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(GroupesTable);\r\n","C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\Statistics.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\pages\\Alerts.js",[],"C:\\Users\\ilias\\Desktop\\Project\\School\\frontend\\src\\pages\\Admin\\components\\AlertForm.js",["196","197","198"],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":59,"column":6,"nodeType":"205","endLine":59,"endColumn":13,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":12},{"ruleId":"203","severity":1,"message":"204","line":58,"column":6,"nodeType":"205","endLine":58,"endColumn":13,"suggestions":"211"},{"ruleId":"203","severity":1,"message":"204","line":25,"column":6,"nodeType":"205","endLine":25,"endColumn":13,"suggestions":"212"},{"ruleId":"203","severity":1,"message":"213","line":31,"column":5,"nodeType":"205","endLine":31,"endColumn":7,"suggestions":"214"},{"ruleId":"203","severity":1,"message":"204","line":30,"column":6,"nodeType":"205","endLine":30,"endColumn":13,"suggestions":"215"},{"ruleId":"203","severity":1,"message":"213","line":37,"column":6,"nodeType":"205","endLine":37,"endColumn":8,"suggestions":"216"},{"ruleId":"203","severity":1,"message":"217","line":13,"column":21,"nodeType":"209","endLine":13,"endColumn":32},{"ruleId":"203","severity":1,"message":"218","line":36,"column":6,"nodeType":"205","endLine":36,"endColumn":16,"suggestions":"219"},{"ruleId":"203","severity":1,"message":"220","line":45,"column":6,"nodeType":"205","endLine":45,"endColumn":26,"suggestions":"221"},{"ruleId":"203","severity":1,"message":"218","line":34,"column":6,"nodeType":"205","endLine":34,"endColumn":16,"suggestions":"222"},{"ruleId":"203","severity":1,"message":"220","line":43,"column":6,"nodeType":"205","endLine":43,"endColumn":26,"suggestions":"223"},{"ruleId":"207","severity":1,"message":"224","line":7,"column":11,"nodeType":"209","messageId":"210","endLine":7,"endColumn":16},{"ruleId":"207","severity":1,"message":"225","line":7,"column":18,"nodeType":"209","messageId":"210","endLine":7,"endColumn":25},{"ruleId":"207","severity":1,"message":"226","line":10,"column":15,"nodeType":"209","messageId":"210","endLine":10,"endColumn":21},{"ruleId":"203","severity":1,"message":"227","line":14,"column":13,"nodeType":"228","endLine":17,"endColumn":4},{"ruleId":"203","severity":1,"message":"229","line":17,"column":6,"nodeType":"205","endLine":17,"endColumn":8,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":20,"column":53,"nodeType":"233","messageId":"234","endLine":20,"endColumn":55},{"ruleId":"203","severity":1,"message":"235","line":23,"column":6,"nodeType":"205","endLine":23,"endColumn":23,"suggestions":"236"},{"ruleId":"203","severity":1,"message":"237","line":43,"column":6,"nodeType":"205","endLine":43,"endColumn":8,"suggestions":"238"},{"ruleId":"207","severity":1,"message":"224","line":7,"column":11,"nodeType":"209","messageId":"210","endLine":7,"endColumn":16},{"ruleId":"207","severity":1,"message":"225","line":7,"column":18,"nodeType":"209","messageId":"210","endLine":7,"endColumn":25},{"ruleId":"203","severity":1,"message":"227","line":10,"column":13,"nodeType":"228","endLine":13,"endColumn":4},{"ruleId":"203","severity":1,"message":"229","line":13,"column":6,"nodeType":"205","endLine":13,"endColumn":8,"suggestions":"239"},{"ruleId":"203","severity":1,"message":"240","line":14,"column":6,"nodeType":"205","endLine":14,"endColumn":8,"suggestions":"241"},{"ruleId":"207","severity":1,"message":"242","line":16,"column":11,"nodeType":"209","messageId":"210","endLine":16,"endColumn":14},{"ruleId":"207","severity":1,"message":"242","line":25,"column":11,"nodeType":"209","messageId":"210","endLine":25,"endColumn":14},{"ruleId":"243","severity":1,"message":"244","line":60,"column":15,"nodeType":"205","messageId":"245","endLine":87,"endColumn":8},{"ruleId":"207","severity":1,"message":"246","line":4,"column":17,"nodeType":"209","messageId":"210","endLine":4,"endColumn":24},{"ruleId":"203","severity":1,"message":"247","line":27,"column":6,"nodeType":"205","endLine":27,"endColumn":8,"suggestions":"248"},{"ruleId":"203","severity":1,"message":"249","line":17,"column":6,"nodeType":"205","endLine":17,"endColumn":8,"suggestions":"250"},{"ruleId":"203","severity":1,"message":"251","line":26,"column":6,"nodeType":"205","endLine":26,"endColumn":8,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":70,"column":11,"nodeType":"255","endLine":70,"endColumn":45},{"ruleId":"203","severity":1,"message":"240","line":14,"column":6,"nodeType":"205","endLine":14,"endColumn":8,"suggestions":"256"},{"ruleId":"207","severity":1,"message":"242","line":16,"column":11,"nodeType":"209","messageId":"210","endLine":16,"endColumn":14},{"ruleId":"207","severity":1,"message":"242","line":24,"column":11,"nodeType":"209","messageId":"210","endLine":24,"endColumn":14},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["259"],"no-unused-vars","'At' is defined but never used.","Identifier","unusedVar",["260"],["261"],"React Hook useEffect has a missing dependency: 'sidebar'. Either include it or remove the dependency array.",["262"],["263"],["264"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["265"],"React Hook useEffect has a missing dependency: 'mytoken'. Either include it or remove the dependency array.",["266"],["267"],["268"],"'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'setTop' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["269"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'notifation'. Either include it or remove the dependency array.",["270"],"React Hook useEffect has missing dependencies: 'getGroupes' and 'res'. Either include them or remove the dependency array.",["271"],["272"],"React Hook useEffect has a missing dependency: 'getGroupes'. Either include it or remove the dependency array.",["273"],"'res' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'message' is defined but never used.","React Hook useEffect has a missing dependency: 'getFiliers'. Either include it or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'getStatis'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'getFiliers' and 'res'. Either include them or remove the dependency array.",["276"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["277"],"no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},{"desc":"278","fix":"281"},{"desc":"282","fix":"283"},{"desc":"278","fix":"284"},{"desc":"282","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"286","fix":"290"},{"desc":"288","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"292","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"299","fix":"307"},"Update the dependencies array to be: [history, token]",{"range":"308","text":"309"},{"range":"310","text":"309"},{"range":"311","text":"309"},"Update the dependencies array to be: [sidebar]",{"range":"312","text":"313"},{"range":"314","text":"309"},{"range":"315","text":"313"},"Update the dependencies array to be: [dispatch, history]",{"range":"316","text":"317"},"Update the dependencies array to be: [timeExpire, logout, mytoken]",{"range":"318","text":"319"},{"range":"320","text":"317"},{"range":"321","text":"319"},"Update the dependencies array to be: [fetchData]",{"range":"322","text":"323"},"Update the dependencies array to be: [id, notifation, notifations]",{"range":"324","text":"325"},"Update the dependencies array to be: [getGroupes, res]",{"range":"326","text":"327"},{"range":"328","text":"323"},"Update the dependencies array to be: [getGroupes]",{"range":"329","text":"330"},"Update the dependencies array to be: [getFiliers]",{"range":"331","text":"332"},"Update the dependencies array to be: [getStatis]",{"range":"333","text":"334"},"Update the dependencies array to be: [getFiliers, res]",{"range":"335","text":"336"},{"range":"337","text":"330"},[1767,1774],"[history, token]",[1743,1750],[860,867],[1051,1053],"[sidebar]",[1057,1064],[1265,1267],[1066,1076],"[dispatch, history]",[1346,1366],"[timeExpire, logout, mytoken]",[1051,1061],[1331,1351],[646,648],"[fetchData]",[826,843],"[id, notifation, notifations]",[1436,1438],"[getGroupes, res]",[519,521],[462,464],"[getGroupes]",[877,879],"[getFiliers]",[439,441],"[getStatis]",[835,837],"[getFiliers, res]",[395,397]]